import csv
from lark.exceptions import UnexpectedInput
from choco.converters import Converter
from choco.converters.leadsheet import Parser
from choco.converters.harte import Encoder

music21_parser = Parser("music21")
harte_encoder = Encoder()

def test_leadsheet_harte_conversion(stats_file):
    """
    Tests the chord converter using the statistics file generated by stats.py.
    TODO: move this function in a separated file
    """
    converter = Converter(music21_parser, harte_encoder)

    with open(stats_file) as csv_file:
        stats = csv.reader(csv_file, delimiter=',')
        # skip header
        next(stats)
        f = 0
        for chord_data in stats:
            try:
                converted_chord = converter.convert(chord_data[0])
                f += float(chord_data[2])
                #print(f"{chord_data[0].ljust(15)} -> {converted_chord}")
            except UnexpectedInput as lark_e:
                # parser error -> chord couldnt be parsed
                print(f"{chord_data[0].ljust(15)} -> Parsing error")
            except Exception as e:
                print(e)
        print(f)


if '__main__' == __name__:
    import os
    basedir = os.path.dirname(__file__)

    leadsheet_chord_stats = os.path.join(basedir, "../../partitions/wikifonia/choco/chord_stats.csv")
    test_leadsheet_harte_conversion(os.path.join(basedir, leadsheet_chord_stats))
    # print(convert_roman_numeral('ii', '#', ['G#', 'minor']))
